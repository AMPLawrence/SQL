--In this SQL code, I am querying a database with multiple tables to answer questions about customer and order data.

--How many orders were placed in January?
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'OrderID'
AND orderdate < '02/01/19';

--How many of those (January) orders were for an iPhone? 
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'OrderID'
AND Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT customers.acctnum
FROM BIT_DB.FebSales sales
INNER JOIN BIT_DB.customers customers
ON sales.orderID = customers.order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID'
AND orderdate IS NOT NULL;  --All dates are from Feb, but there are null dates

--Which product was the cheapest one sold in January, and what was the price? 
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
ORDER BY price asc
LIMIT 1;

--What is the total revenue for each product sold in January? 
SELECT Product, SUM(price) * Quantity AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity) AS Qty, SUM(price) * Quantity AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 
SELECT DISTINCT COUNT (customer.acctnum), AVG(Feb.price * Quantity) AS amt_spent
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers customer
ON Feb.orderID = customer.order_id
WHERE Quantity > 2
AND LENGTH (Feb.orderID) = 6
AND Feb.orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT DISTINCT Product, SUM(Quantity) AS Qty
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;
